@charset "UTF-8";@keyframes fadeInUp{from{opacity:0;transform:translateY(30px)}to{opacity:1;transform:translateY(0)}}@keyframes float{0%,100%{transform:translateY(0)}50%{transform:translateY(-20px)}}.animate-on-scroll{opacity:0;transform:translateY(30px);transition:all .6s ease}.animate-on-scroll.animated{opacity:1;transform:translateY(0)}*,::after,::before{box-sizing:border-box}html{-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;-ms-overflow-style:scrollbar;-webkit-tap-highlight-color:transparent;margin:0;padding:0;height:100%;scroll-behavior:smooth}@-ms-viewport{width:device-width}article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}body{margin:0;padding:0;font-variant-ligatures:none!important;line-height:1;height:100%;overflow-x:hidden;font-family:Inter,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,sans-serif;line-height:1.6;color:var(--text-primary);overflow-x:hidden}[tabindex="-1"]:focus{outline:0!important}hr{box-sizing:content-box;height:0;overflow:visible}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:0}p{margin-top:0;margin-bottom:0}abbr[data-original-title],abbr[title]{text-decoration:underline;text-decoration:underline dotted;cursor:help;border-bottom:0}address{margin-bottom:1rem;font-style:normal;line-height:inherit}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}dfn{font-style:italic}b,strong{font-weight:700}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:not([href]):not([tabindex]){text-decoration:none}a:not([href]):not([tabindex]):focus{outline:0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}pre{margin-top:0;margin-bottom:1rem;overflow:auto;-ms-overflow-style:scrollbar}figure{margin:0 0 1rem}img{vertical-align:middle;border-style:none}svg:not(:root){overflow:hidden}table{border-collapse:collapse}caption{text-align:left;caption-side:bottom}th{text-align:inherit}label{display:inline-block;margin-bottom:0}button{border-radius:0}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{padding:0;border-style:none}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=date],input[type=datetime-local],input[type=month],input[type=time]{-webkit-appearance:listbox}textarea{overflow:auto;resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;max-width:100%;padding:0;margin-bottom:.5rem;font-size:1.5rem;line-height:inherit;color:inherit;white-space:normal}progress{vertical-align:baseline}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{outline-offset:-2px;-webkit-appearance:none}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}output{display:inline-block}summary{display:list-item;cursor:pointer}template{display:none}[hidden]{display:none!important}.header{position:fixed;top:0;left:0;right:0;z-index:1000;transition:all .3s cubic-bezier(.4,0,.2,1);transform:translateY(0)}.header.scrolled{background-color:#fff;box-shadow:0 10px 15px -3px rgba(0,0,0,.1);padding:.5rem 0}.header.scrolled .nav-link{color:#000}.header.scrolled .logo svg{fill:#000}.header.hidden{transform:translateY(-100%)}.nav-container{display:flex;justify-content:space-between;align-items:center}.logo svg{width:1.875rem;height:1.875rem;fill:#fff}.nav-menu{display:flex;flex-direction:column;list-style:none;gap:2.1875rem;position:fixed;top:100%;left:0;right:0;background:#fff;padding:1.25rem;transform:translateY(-100%);opacity:0;visibility:hidden;transition:all .3s ease;box-shadow:var(--shadow-lg)}.nav-menu.active{transform:translateY(0);opacity:1;visibility:visible}@media (min-width:769px){.nav-menu{position:static;flex-direction:row;padding:0;background:0 0;box-shadow:none;transform:none;opacity:1;visibility:visible}}.nav-link{text-decoration:none;color:#000;font-weight:500;position:relative;transition:color .3s ease}@media (min-width:769px){.nav-link{color:#fff}}.nav-link::after{content:"";position:absolute;width:0;height:.125rem;bottom:-.3125rem;left:0;background:linear-gradient(135deg,#1b3c53,#456882);transition:width .3s ease}.nav-link:hover::after{width:100%}.mobile-menu-btn{display:block;background:0 0;border:none;font-size:1.875rem;cursor:pointer}@media (min-width:769px){.mobile-menu-btn{display:none}}@media (min-width:769px){.nav-menu.active{transform:translateY(0);opacity:1;visibility:visible}}.container{width:100%;margin-right:auto;margin-left:auto;padding-right:1rem;padding-left:1rem}.container-sm{max-width:540px;width:100%;margin-right:auto;margin-left:auto;padding-right:1rem;padding-left:1rem}.container-md{max-width:720px;width:100%;margin-right:auto;margin-left:auto;padding-right:1rem;padding-left:1rem}.container-lg{max-width:960px;width:100%;margin-right:auto;margin-left:auto;padding-right:1rem;padding-left:1rem}.container-xl{max-width:1140px;width:100%;margin-right:auto;margin-left:auto;padding-right:1rem;padding-left:1rem}.container-xxl{max-width:1320px;width:100%;margin-right:auto;margin-left:auto;padding-right:1rem;padding-left:1rem}.footer{background:#0f172a;color:#f9f3ef;text-align:center;padding:3rem 0}.tiles-section{padding:6rem 0;background:#f8fafc;position:relative;overflow:hidden}.tiles-container{display:flex;flex-direction:column-reverse;gap:3rem;text-align:center}@media (min-width:769px){.tiles-container{display:grid;grid-template-columns:1fr 1fr;gap:4rem;align-items:center;min-height:600px}.tiles-container .tiles-left{order:1}.tiles-container .tiles-right{order:2}.tiles-container.rtl .tiles-left{order:2}.tiles-container.rtl .tiles-right{order:1}}.tiles-container:not(:has(.tiles-right)){grid-template-columns:1fr;text-align:center}.tiles-left{display:flex;flex-direction:column;gap:2rem}.name-tile{background:#fff;padding:2em;border-radius:25px;box-shadow:0 10px 15px -3px rgba(0,0,0,.1);position:relative;overflow:hidden;border:1px solid rgba(255,255,255,.2)}@media (min-width:769px){.name-tile{padding:3em}}.name-tile::before{content:"";position:absolute;top:0;left:0;right:0;height:6px;background:linear-gradient(135deg,#1b3c53,#456882)}.display-name{font-size:2.5rem;font-weight:700;background:linear-gradient(135deg,#1b3c53,#456882);-webkit-background-clip:text;-webkit-text-fill-color:transparent;background-clip:text;margin-bottom:.5rem;line-height:1.1}@media (min-width:769px){.display-name{font-size:3rem}}.tagline{font-size:1.2rem;color:#6b7280;margin-bottom:1.5rem}.decorative-line{width:60px;height:4px;background:linear-gradient(135deg,#06b6d4,#456882);border-radius:2px}.info-tiles{display:grid;grid-template-columns:1fr;gap:1rem}@media (min-width:769px){.info-tiles{grid-template-columns:repeat(2,1fr)}}.info-tile{background:#fff;padding:.625rem;border-radius:20px;box-shadow:0 4px 6px -1px rgba(0,0,0,.1);display:flex;align-items:center;gap:1rem;transition:all .3s ease;border:1px solid rgba(255,255,255,.2);text-decoration:none}.info-tile:hover{transform:translateY(-5px);box-shadow:0 10px 15px -3px rgba(0,0,0,.1)}.tile-icon{font-size:1.5rem;width:50px;height:50px;background:linear-gradient(135deg,#06b6d4,#456882);border-radius:12px;display:flex;align-items:center;justify-content:center;color:#fff;flex-shrink:0}.tile-content{display:flex;flex-direction:column;text-align:left}.tile-label{font-size:.8rem;color:#6b7280;text-transform:uppercase;letter-spacing:.5px;font-weight:500}.tile-value{font-size:1rem;font-weight:600;color:#1f2937}.tiles-right{position:relative}.image-tile{position:relative;aspect-ratio:4/5;border-radius:30px;overflow:hidden;box-shadow:0 20px 25px -5px rgba(0,0,0,.1);background:linear-gradient(135deg,#1b3c53,#456882)}@media (max-width:767px){.image-tile{max-width:400px;margin:0 auto}}.image-placeholder{width:100%;height:100%;display:flex;flex-direction:column;align-items:center;justify-content:center;color:#fff;text-align:center;padding:2rem;background:linear-gradient(135deg,#1b3c53,#456882)}.placeholder img{width:100%;height:100%;object-fit:cover;display:block;border-radius:30px}.placeholder-text{font-size:1.2rem;font-weight:600;margin-bottom:.5rem}.placeholder-hint{font-size:.9rem;opacity:.7}.image-overlay{position:absolute;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,.1);opacity:0;transition:opacity .3s ease}.image-tile:hover .image-overlay{opacity:1}.floating-elements{position:absolute;top:0;left:0;right:0;bottom:0;pointer-events:none}.floating-dot{position:absolute;width:12px;height:12px;background:rgba(255,255,255,.3);border-radius:50%;animation:float 6s ease-in-out infinite}.dot-1{top:20%;right:15%;animation-delay:0s}.dot-2{bottom:30%;left:10%;animation-delay:2s}.dot-3{top:60%;right:25%;animation-delay:4s}.hero-section{position:relative}.hero-carousel{height:100vh;min-height:37.5rem}.hero-slide{position:relative;height:100vh;min-height:37.5rem;display:flex;align-items:center;justify-content:center;overflow:hidden}.hero-background{position:absolute;inset:0;background-size:cover;background-position:center;background-attachment:fixed;filter:blur(5px);z-index:0;transform:scale(1.1)}.hero-slide::before{content:"";position:absolute;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,.4);z-index:1}.hero-content{text-align:center;color:#fff;z-index:2;max-width:50rem;padding:0 1.25rem;animation:fadeInUp 1s ease-out}.hero-title{margin-bottom:.9375rem;line-height:1.1}.hero-subtitle{margin-bottom:1.25rem;opacity:.9}@media (min-width:769px){.hero-subtitle{font-size:1.25rem}}.hero-cta{display:inline-flex;padding:.9375rem 1.5625rem;background:linear-gradient(135deg,#06b6d4,#456882);color:#fff;text-decoration:none;border-radius:3.125rem;font-weight:600;transition:transform .3s ease,box-shadow .3s ease}.hero-cta:hover{transform:translateY(-2px);box-shadow:0 20px 25px -5px rgba(0,0,0,.1)}.splide__arrow{background:0 0}.splide__arrow svg{fill:#fff;width:2.5rem;height:2.5rem}.accordion-container{max-width:800px;margin:0 auto}.accordion-item{margin-bottom:1rem;border:1px solid #e5e7eb;border-radius:15px;overflow:hidden;box-shadow:0 1px 2px 0 rgba(0,0,0,.05)}.accordion-header{background:#f8fafc;padding:1.5rem;cursor:pointer;display:flex;justify-content:space-between;align-items:center;transition:background .3s ease;user-select:none}.accordion-header:hover{background:#f1f5f9}.accordion-title{font-weight:600;font-size:1.1rem}.accordion-icon{font-size:1.2rem;transition:transform .3s ease}.accordion-item.active .accordion-icon{transform:rotate(180deg)}.accordion-content{max-height:0;overflow:hidden;opacity:0;padding:0 1.5rem;transition:max-height .3s ease,opacity .3s ease,padding .3s ease}.accordion-item.active .accordion-content{max-height:500px;opacity:1;padding:1.5rem}.accordion-item.active .accordion-header{background-color:#456882;color:#f9f3ef}.accordion-text{color:var(--text-secondary);line-height:1.6}.cards-grid{display:grid;grid-template-columns:1fr;gap:2rem;margin-top:3rem}@media (min-width:769px){.cards-grid{grid-template-columns:repeat(auto-fit,minmax(300px,1fr))}}.card{background:#fff;border-radius:20px;box-shadow:0 4px 6px -1px rgba(0,0,0,.1);transition:all .3s cubic-bezier(.4,0,.2,1);position:relative;overflow:hidden;padding:1.5rem}.card:hover{transform:translateY(-10px);box-shadow:0 20px 25px -5px rgba(0,0,0,.1)}.card::before{content:"";position:absolute;left:0;right:0;top:0;height:4px;background:linear-gradient(135deg,#1b3c53,#456882);transform:scaleX(0);transition:transform .3s ease}.card:hover::before{transform:scaleX(1)}@media (min-width:321px){.card{padding:2rem}}.card-icon{width:60px;height:60px;background:linear-gradient(135deg,#06b6d4,#456882);border-radius:15px;display:flex;align-items:center;justify-content:center;margin-bottom:1.5rem;font-size:1.5rem;color:#fff}.card-title{font-size:1.25rem;font-weight:600;margin-bottom:1rem}.card-description{color:#6b7280;line-height:1.6}.certifications-section{background:#1b3c53;position:relative}.certifications-grid{display:grid;grid-template-columns:1fr;gap:2rem;margin-top:3rem}@media (min-width:769px){.certifications-grid{grid-template-columns:repeat(auto-fit,minmax(360px,1fr))}}.certification-card{background:#fff;border-radius:20px;box-shadow:0 4px 6px -1px rgba(0,0,0,.1);transition:all .3s cubic-bezier(.4,0,.2,1);position:relative;overflow:hidden;padding:0;border:1px solid #e5e7eb;display:flex;flex-direction:column}.certification-card:hover{transform:translateY(-8px);box-shadow:0 20px 25px -5px rgba(0,0,0,.1)}.certification-card::before{content:"";position:absolute;left:0;right:0;bottom:0;height:4px;background:linear-gradient(135deg,#1b3c53,#456882);transform:scaleX(0);transition:transform .3s ease}.certification-card:hover::before{transform:scaleX(1)}.cert-badge{background:linear-gradient(135deg,#06b6d4,#456882);padding:5.5rem 1.5rem;background-size:contain;background-repeat:no-repeat;background-position:center;display:flex;justify-content:space-between;align-items:center;color:#fff;border-bottom:3px solid #1b3c53}.cert-icon{font-size:2rem;background:rgba(255,255,255,.2);width:60px;height:60px;border-radius:50%;display:flex;align-items:center;justify-content:center;backdrop-filter:blur(10px)}.cert-year{font-size:1.2rem;font-weight:700;background:rgba(255,255,255,.2);padding:.5rem 1rem;border-radius:25px;backdrop-filter:blur(10px)}.cert-content{padding:2rem;display:flex;flex-direction:column;flex-grow:1}.cert-title{font-size:1.3rem;font-weight:700;margin-bottom:.5rem;color:#1f2937}.cert-issuer{font-size:1rem;color:#1b3c53;font-weight:600;margin-bottom:1rem}.cert-description{color:#456882;line-height:1.6;margin-bottom:1.5rem}.cert-skills{display:flex;flex-wrap:wrap;gap:.5rem;margin-bottom:1rem}.skill-tag{background:#f8fafc;color:#1f2937;padding:.3rem .8rem;border-radius:15px;font-size:.8rem;font-weight:500;border:1px solid #e5e7eb;transition:all .3s ease}.skill-tag:hover{background:#1b3c53;color:#fff;transform:translateY(-1px)}.cert-verify{margin-top:auto}.verify-link{color:#1b3c53;text-decoration:none;font-weight:600;font-size:.9rem;display:inline-flex;align-items:center;gap:.5rem;transition:all .3s ease;position:relative}.verify-link::after{content:"→";transition:transform .3s ease}.verify-link:hover{color:#0f172a}.verify-link:hover::after{transform:translateX(3px)}h1{font-size:2.5rem}@media (min-width:769px){h1{font-size:4rem}}h2{font-size:1.75rem}@media (min-width:769px){h2{font-size:3.25rem}}h3{font-size:1.5rem}@media (min-width:769px){h3{font-size:1.5rem}}p{font-size:1rem}@media (min-width:769px){p{font-size:1.25rem}}.section{padding:3rem 0;background-color:#f8fafc}@media (min-width:321px){.section{padding:5rem 0}}.container{max-width:1200px;margin:0 auto;padding:1rem}@media (min-width:769px){.container{padding:1rem 2rem}}.section-title{text-align:center;font-size:2rem;font-weight:700;margin-bottom:3rem;background:linear-gradient(135deg,#1b3c53,#456882);-webkit-background-clip:text;-webkit-text-fill-color:transparent;background-clip:text}@media (min-width:769px){.section-title{font-size:2.5rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
